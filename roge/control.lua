Map = require "map"T = require "time"mp = require "mp"Time = T.createTime()characs = Chars.characscontrol = {time = 0, hp = 1, mn = 0}--screen-- Map:createMap(10, 10, "black")Map:createMapFromTable(mp)Map.mover.filler.characs = characs-- print("start")function showMap(map)    control.time = Time.value    screen:showMap(map.cells,control, 10, 10)endevent.subscribe(Map.mover.filler, "move", function(value) Time:increase(value*characs.resultChars.stepTmp) end)while true do    showMap(Map)    ch = controller:playerMove()    if ch == direct.c then        characs:show()    elseif ch == direct.i then        inventory.inv:show()    else        Map.mover:Move(ch)    endend--[===[require "inventory"require "chars"control = { tempus=0, exp=0, innerKeys = {current=0, count=0}}function plusTemp(dt)    control.tempus = control.tempus + dt * characs.resultChars.stepTmpendfunction control:show()    for k,v in pairs(chars) do        if type(v) ~="table" and type(v) ~="function" then            self[k] = v        end    end    screen:show(self)endcontrol:show()function print(text)    screen:print(text)end -- print("ssss")while true do    control:show()    ch= controller:playerMove()    if(ch == nil)then    print(ch)    end    -- f:write(ch)    -- f:write("\n")        if(ch == "I") then        inventory:show()            elseif( ch == "C") then        characs:show()    else    end    end-- io.close(f)]===]